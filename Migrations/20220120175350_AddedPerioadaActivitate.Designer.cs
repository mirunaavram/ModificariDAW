// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using test2.Entities;

namespace test2.Migrations
{
    [DbContext(typeof(TineriContext))]
    [Migration("20220120175350_AddedPerioadaActivitate")]
    partial class AddedPerioadaActivitate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("test2.Entities.Activitate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NrParticipanti")
                        .HasColumnType("int");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activitate");
                });

            modelBuilder.Entity("test2.Entities.Locatie", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Oras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TanarId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Tara")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TanarId")
                        .IsUnique()
                        .HasFilter("[TanarId] IS NOT NULL");

                    b.ToTable("Locatie");
                });

            modelBuilder.Entity("test2.Entities.PerioadaActivitate", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActivitateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("An")
                        .HasColumnType("int");

                    b.Property<string>("Luna")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActivitateId");

                    b.ToTable("PerioadaActivitate");
                });

            modelBuilder.Entity("test2.Entities.Tineri", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tineri");
                });

            modelBuilder.Entity("test2.Entities.Locatie", b =>
                {
                    b.HasOne("test2.Entities.Tineri", "Tineri")
                        .WithOne("Locatie")
                        .HasForeignKey("test2.Entities.Locatie", "TanarId");

                    b.Navigation("Tineri");
                });

            modelBuilder.Entity("test2.Entities.PerioadaActivitate", b =>
                {
                    b.HasOne("test2.Entities.Activitate", "Activitate")
                        .WithMany("PerioadaActivitate")
                        .HasForeignKey("ActivitateId");

                    b.Navigation("Activitate");
                });

            modelBuilder.Entity("test2.Entities.Activitate", b =>
                {
                    b.Navigation("PerioadaActivitate");
                });

            modelBuilder.Entity("test2.Entities.Tineri", b =>
                {
                    b.Navigation("Locatie");
                });
#pragma warning restore 612, 618
        }
    }
}
